"Unspecified" = "#e76f51"
)
)
# Create the heatmap overview
heatmap <- pheatmap(data_matrix,
annotation_col = filtered_data_frame1["gene_kind"],
annotation_colors = category_color,
annotation_row = annotation["isolation_source_category"],
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = F,
cutree_rows = 4)
heatmap
View(filtered_data_frame1)
View(data_matrix)
View(heatmap)
View(heatmap)
# Terpene
# Extracting from heatmap results from 241002_Microbacterium_PKS_fai.Rmd
all_terpene <- heatmap[["tree_row"]][["labels"]]
# Create dataframe
all_df_terpene <- data.frame(
Species = all_terpene,
stringsAsFactors = FALSE)
# Extract the GCA accession
all_df_terpene$ncbi_genbank_assembly_accession <- sub(".*_(GCA_\\d+\\.\\d+)$", "\\1", all_df_terpene$Species)
# Merge
all_df_terpene_merged <- merge(all_df_terpene, bac120_metadata,
by = "ncbi_genbank_assembly_accession",
all.x = TRUE)
# Import data from
bac120_metadata <- read_delim("~/Downloads/bac120_metadata.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
library(readr)
# Import data from
bac120_metadata <- read_delim("~/Downloads/bac120_metadata.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(all_df_terpene)
# Merge
all_df_terpene_merged <- merge(all_df_terpene, bac120_metadata,
by = "ncbi_genbank_assembly_accession",
all.x = TRUE)
View(all_df_terpene_merged)
unique(all_df_terpene_merged$ncbi_isolation_source)
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|nasal|gut|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|nasal|gut|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|Adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue|manure", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
View(all_df_terpene_merged)
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|nasal|gut|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear|vaginal", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|Adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue|manure", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
# Zoom in on specific clusters
clusters <- cutree(heatmap$tree_row, k = 4)
# Subset data matrix and annotations based on the cluster
cluster_of_interest = 1
data_subset <- data_matrix[clusters == cluster_of_interest, ]
# Create the heatmap cluster 1
heatmap1 <- pheatmap(data_subset,
annotation_col = data_frame1["gene_kind"],
annotation_colors = list(gene_kind = category_color),
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = T,
fontsize_row = 6,
cutree_rows = 2)
category_color <- c("biosynthetic" = "#071E22",
"biosynthetic-additional" = "#1D7874",
"regulatory" = "#F4C095",
"other" = "#679289")
data_frame1$gene_kind_color <- category_color[data_frame1$gene_kind]
# Create the heatmap cluster 1
heatmap1 <- pheatmap(data_subset,
annotation_col = data_frame1["gene_kind"],
annotation_colors = list(gene_kind = category_color),
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = T,
fontsize_row = 6,
cutree_rows = 2)
View(heatmap1)
heatmap1[["tree_row"]][["labels"]]
# Terpene
# Extracting from heatmap results from 241002_Microbacterium_PKS_fai.Rmd
all_terpene <- heatmap1[["tree_row"]][["labels"]]
# Create dataframe
all_df_terpene <- data.frame(
Species = all_terpene,
stringsAsFactors = FALSE)
# Extract the GCA accession
all_df_terpene$ncbi_genbank_assembly_accession <- sub(".*_(GCA_\\d+\\.\\d+)$", "\\1", all_df_terpene$Species)
# Merge
all_df_terpene_merged <- merge(all_df_terpene, bac120_metadata,
by = "ncbi_genbank_assembly_accession",
all.x = TRUE)
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|nasal|gut|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear|vaginal", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|Adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue|swine manure|na
Natural near bottom seawater", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
heatmap1
heatmap
heatmap
heatmap1
heatmap1
# Terpene
# Extracting from heatmap results from 241002_Microbacterium_PKS_fai.Rmd
all_terpene <- heatmap1[["tree_row"]][["labels"]]
# Create dataframe
all_df_terpene <- data.frame(
Species = all_terpene,
stringsAsFactors = FALSE)
# Extract the GCA accession
all_df_terpene$ncbi_genbank_assembly_accession <- sub(".*_(GCA_\\d+\\.\\d+)$", "\\1", all_df_terpene$Species)
# Merge
all_df_terpene_merged <- merge(all_df_terpene, bac120_metadata,
by = "ncbi_genbank_assembly_accession",
all.x = TRUE)
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|nasal|gut|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear|vaginal", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|Adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue|swine manure|na
Natural near bottom seawater", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|nasal|gut|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear|vaginal", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|Adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue|swine manure|na
Natural near bottom seawater|larva", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear|vaginal", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|Adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue|swine manure|na
Natural near bottom seawater|larva|petroleum-contaminated soil|soil adjacent to human cadaver hip", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear|vaginal", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|Adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue|swine manure|na
Natural near bottom seawater|larva|petroleum-contaminated soil|soil adjacent to human cadaver hip|larva skin surface", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
write.csv(all_df_terpene_merged, "/Users/thynguyen/Documents/GitHub/Kalan_Lab/scripts/unguyen2/BGC/LK369/241002_Microbacterium_fai_TerpeneMetadata.csv")
# Import metadata
metadata <- read.csv("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/BGC/LK369/241002_Microbacterium_fai_TerpeneMetadata.csv")
# Assign
annotation <- metadata %>%
select(Species,ncbi_isolation_source, isolation_source_category) %>%
column_to_rownames("Species")
# Set color
category_color <- list(
gene_kind = c("biosynthetic" = "#071E22",
"biosynthetic-additional" = "#1D7874",
"regulatory" = "#F4C095",
"other" = "#679289"),
isolation_source_category = c(
"Skin-associated" = "#264653",
"Human-associated" = "#2a9d8f",
"Environment-associated" = "#f4a261",
"Unspecified" = "#e76f51"
)
)
# Zoom in on specific clusters
clusters <- cutree(heatmap$tree_row, k = 4)
# Subset data matrix and annotations based on the cluster
cluster_of_interest = 1
data_subset <- data_matrix[clusters == cluster_of_interest, ]
# Create the heatmap cluster 1
heatmap1 <- pheatmap(data_subset,
annotation_col = filtered_data_frame1["gene_kind"],
annotation_colors = category_color,
annotation_row = annotation["isolation_source_category"],
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = T,
fontsize_row = 6,
cutree_rows = 2)
heatmap1
# Create the heatmap cluster 1
heatmap1 <- pheatmap(data_subset,
annotation_col = data_frame1["gene_kind"],
annotation_colors = category_color,
annotation_row = annotation["isolation_source_category"],
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = T,
fontsize_row = 6,
cutree_rows = 2)
heatmap1
# Function to categorize metadata
categorize_isolation_source <- function(source) {
source <- tolower(source)  # Convert to lowercase
# Skin-associated
if (grepl("skin|axillary|groin|toe|back", source)) {
return("Skin-associated")
}
# Human-associated
if (grepl("human|blood|oral|intestin|feces|faecal|catheter|prosthesis|cerebrospinal|ocular|oral|ear|vaginal", source)) {
return("Human-associated")
}
# Environment-associated
if (grepl("soil|water|sediment|marine|air|plant|rhizosphere|compost|waste|sludge|biofilm|bioreactor|hot spring|hydrothermal|cave|cleanroom|Adult mosquito gut|ruminant|faecal of marmot|coral surface mucus layer and tissue|swine manure|na
Natural near bottom seawater|larva skin surface|petroleum-contaminated soil|soil adjacent to human cadaver hip|larva skin surface", source)) {
return("Environment-associated")
}
# If none of the above, or if it's "none"
if (source == "none") {
return("Unspecified")
}
# If it doesn't match any of the above categories
return("Environment-associated")  # Default to Environment-associated for other cases
}
# Apply the function to create a new column
all_df_terpene_merged$isolation_source_category <- sapply(all_df_terpene_merged$ncbi_isolation_source, categorize_isolation_source)
all_df_terpene_merged <- all_df_terpene_merged %>%
relocate(isolation_source_category, .after = ncbi_isolation_source)
View(all_df_terpene_merged)
# Create the heatmap cluster 1
heatmap1 <- pheatmap(data_subset,
annotation_col = data_frame1["gene_kind"],
annotation_colors = category_color,
annotation_row = annotation["isolation_source_category"],
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = F,
fontsize_row = 6,
cutree_rows = 2)
heatmap1
# Create the heatmap cluster 1
heatmap1 <- pheatmap(data_subset,
annotation_col = data_frame1["gene_kind"],
annotation_colors = category_color,
annotation_row = annotation["isolation_source_category"],
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = T,
fontsize_row = 5,
cutree_rows = 2)
heatmap1
heatmap
# Create the heatmap overview
heatmap <- pheatmap(data_matrix,
annotation_col = data_frame1["gene_kind"],
annotation_colors = list(gene_kind = category_color),
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = F,
cutree_rows = 4)
category_color <- c("biosynthetic" = "#071E22",
"biosynthetic-additional" = "#1D7874",
"regulatory" = "#F4C095",
"other" = "#679289")
data_frame1$gene_kind_color <- category_color[data_frame1$gene_kind]
# Create the heatmap overview
heatmap <- pheatmap(data_matrix,
annotation_col = data_frame1["gene_kind"],
annotation_colors = list(gene_kind = category_color),
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = F,
cutree_rows = 4)
heatmap
# Create the heatmap overview
heatmap <- pheatmap(data_matrix,
annotation_col = data_frame1["gene_kind"],
annotation_colors = list(gene_kind = category_color),
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = F,
cutree_rows = 5)
heatmap
# Create the heatmap overview
heatmap <- pheatmap(data_matrix,
annotation_col = data_frame1["gene_kind"],
annotation_colors = list(gene_kind = category_color),
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = F,
cutree_rows = 4)
# Import metadata
metadata <- read.csv("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/BGC/LK369/241002_Microbacterium_fai_TerpeneMetadata.csv")
# Assign
annotation <- metadata %>%
select(Species,ncbi_isolation_source, isolation_source_category) %>%
column_to_rownames("Species")
# Set color
category_color <- list(
gene_kind = c("biosynthetic" = "#071E22",
"biosynthetic-additional" = "#1D7874",
"regulatory" = "#F4C095",
"other" = "#679289"),
isolation_source_category = c(
"Skin-associated" = "#264653",
"Human-associated" = "#2a9d8f",
"Environment-associated" = "#f4a261",
"Unspecified" = "#e76f51"
)
)
# Zoom in on specific clusters
clusters <- cutree(heatmap$tree_row, k = 4)
# Subset data matrix and annotations based on the cluster
cluster_of_interest = 1
data_subset <- data_matrix[clusters == cluster_of_interest, ]
# Create the heatmap cluster 1
heatmap1 <- pheatmap(data_subset,
annotation_col = data_frame1["gene_kind"],
annotation_colors = category_color,
annotation_row = annotation["isolation_source_category"],
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = T,
fontsize_row = 5,
cutree_rows = 2)
heatmap1
# Create the heatmap cluster 1
heatmap1 <- pheatmap(data_subset,
annotation_col = data_frame1["gene_kind"],
annotation_colors = category_color,
annotation_row = annotation["isolation_source_category"],
color = viridis::plasma(256),
cluster_cols = F,
show_rownames = F,
fontsize_row = 5,
cutree_rows = 2)
heatmap1
