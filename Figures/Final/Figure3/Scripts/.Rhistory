) %>%
mutate(mean_abundance_kraken = if_else(is.nan(mean_abundance_kraken), 0, mean_abundance_kraken)) %>%
pivot_longer(
cols = c(mean_abundance_sylph, mean_abundance_kraken),
names_to = "dataset",
values_to = "rel_abun"
) %>%
mutate(dataset = case_when(
dataset == "mean_abundance_sylph" ~ "Sylph",
dataset == "mean_abundance_kraken" ~ "Kraken",
TRUE ~ dataset
)) %>%
dplyr::rename("genus" = "genus1") %>%
select(dataset, genus, body_site, site_type, rel_abun)
# Combine metagenomic and culture data
combined <- rbind(metagenome_final, culture_final)
View(combined)
# Input data for upset plot
# By genus, body_site, site_type ----
upset_presence <- combined %>%
filter(!dataset == "Sylph") %>%
#filter(!dataset == "Kraken") %>%
filter(rel_abun > 0) %>%
distinct(dataset, body_site, site_type, genus) %>%
mutate(present = 1) %>%
pivot_wider(names_from = dataset,
values_from = present,
values_fill = 0) %>%
filter(!genus == "Other")
# Abundance statistics for each genus across datasets
abundance_stats <- combined %>%
filter(!dataset == "Sylph") %>%
#filter(!dataset == "Kraken") %>%
group_by(genus, body_site, site_type, dataset) %>%
dplyr::summarise(
mean_abundance = mean(rel_abun, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(
names_from = dataset,
values_from = mean_abundance,
values_fill = 0
) %>%
filter(!genus == "Other")
# Combine the datasets - Kraken
upset_data <- upset_presence %>%
dplyr::left_join(abundance_stats, by = c("genus", "body_site", "site_type")) %>%
dplyr::rename("Kraken" = "Kraken.x",
"Culture" = "Culture.x",
"Kraken_abundance" = "Kraken.y",
"Culture_abundance" = "Culture.y")
# Combine the datasets - Sylph
#upset_data <- upset_presence %>%
#  dplyr::left_join(abundance_stats, by = c("genus", "body_site", "site_type")) %>%
#  dplyr::rename("Sylph" = "Sylph.x",
#         "Culture" = "Culture.x",
#         "Sylph_abundance" = "Sylph.y",
#         "Culture_abundance" = "Culture.y")
# Format 0/1 as numeric
#upset_data <- upset_data %>%
#  mutate(
#    Sylph = as.numeric(Sylph),
#    Kraken = as.numeric(Kraken),
#    Culture = as.numeric(Culture)
#  ) %>%
# Filter out rows if both column have < 0.0001
#  filter(Kraken_abundance >= 0.0001 | Sylph_abundance >= 0.0001) # 2361 taxa remaining
# Use this one
#upset_data <- upset_data %>%
#  mutate(
#    Sylph = as.numeric(Sylph),
#    Kraken = as.numeric(Kraken),
#    Culture = as.numeric(Culture)
#  ) %>%
# Filter out rows if either column have < 0.0001
#  filter(Kraken_abundance >= 0.0001,  Sylph_abundance >= 0.0001) # 1084 taxa remaining
# Use this one
upset_data1 <- upset_data %>%
mutate(
Kraken = as.numeric(Kraken),
Culture = as.numeric(Culture)
) %>%
# Filter out rows if either column have < 0.01%
filter(Kraken_abundance >= 0.0001) # 1981 taxa remaining
#upset_data2 <- upset_data %>%
#  mutate(
#    Sylph = as.numeric(Sylph),
#    Culture = as.numeric(Culture)
#  ) %>%
# Filter out rows if either column have < 0.001
#  filter(Sylph_abundance >= 0.0001) # 827 taxa remaining filtering out < 0.005 abundance; 1464 taxa for < 0.0001
# Plot
#upset(
#  upset_data,
#  intersect = c("Culture", "Sylph", "Kraken"),
#  name = "",
#  width_ratio = 0.1,
#  min_size = 1,
#  max_degree = 3,
#  base_annotations = list(
#    "Taxa Count" = intersection_size(
#      counts = TRUE,
#      text = list(size = 3)
#    )
#  ),
# Add side plots for abundance
#  stripes = upset_stripes(
#    geom = geom_segment(size = 6),
#    colors = c("white", "grey95")
#  ),
# Change set size
#  set_sizes = upset_set_size() +
#    theme(
#      axis.text.x = element_text(angle = 45, hjust = 1),
#      axis.title.x = element_blank()
#    ),
# Add custom annotations
#  annotations = list(
#    "Culture abundance" = (
#      ggplot(mapping = aes(y = Culture_abundance)) +
#        geom_boxplot(fill = "#b1728f", alpha = 0.7) +
#        theme_minimal() +
#        labs(y = "Culture abundance")
#    ),
#    "Sylph abundance" = (
#      ggplot(mapping = aes(y = Sylph_abundance)) +
#        geom_boxplot(fill = "#38761d", alpha = 0.7) +
#        theme_minimal() +
#        labs(y = "Sylph abundance")
#    ),
#    "Kraken abundance" = (
#      ggplot(mapping = aes(y = Kraken_abundance)) +
#        geom_boxplot(fill = "#073763", alpha = 0.7) +
#        theme_minimal() +
#        labs(y = "Kraken abundance")
#    )
#  )
#)
# Kraken - 100 overlapping taxa
upset(
upset_data1,
intersect = c("Culture", "Kraken"),
name = "",
width_ratio = 0.1,
min_size = 1,
max_degree = 3,
base_annotations = list(
"Taxa Count" = intersection_size(
counts = TRUE,
text = list(size = 3)
)
),
# Add side plots for abundance
stripes = upset_stripes(
geom = geom_segment(size = 6),
colors = c("white", "grey95")
),
# Change set size
set_sizes = upset_set_size() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()
),
# Add custom annotations
annotations = list(
"Culture abundance" = (
ggplot(mapping = aes(y = Culture_abundance)) +
geom_boxplot(fill = "#b1728f", alpha = 0.7) +
theme_minimal() +
labs(y = "Culture abundance")
),
"Kraken abundance" = (
ggplot(mapping = aes(y = Kraken_abundance)) +
geom_boxplot(fill = "#073763", alpha = 0.7) +
theme_minimal() +
labs(y = "Kraken abundance")
)
)
)
# Plot without boxplot
upset(
upset_data1,
intersect = c("Culture", "Kraken"),
name = "",
width_ratio = 0.1,
min_size = 1,
max_degree = 3,
base_annotations = list(
"Taxa Count" = intersection_size(
counts = TRUE,
text = list(size = 3)
)
),
# Add side plots for abundance
stripes = upset_stripes(
geom = geom_segment(size = 6),
colors = c("white", "grey95")
),
# Change set size
set_sizes = upset_set_size() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()
)
)
# By genus ----
# Input data for upset plot
upset_presence_genus <- combined %>%
filter(!dataset == "Sylph") %>%
#filter(!dataset == "Kraken") %>%
filter(rel_abun > 0) %>%
distinct(dataset, genus) %>%
mutate(present = 1) %>%
pivot_wider(names_from = dataset,
values_from = present,
values_fill = 0) %>%
filter(!genus == "Other")
# Abundance statistics for each genus across datasets
abundance_stats_genus <- combined %>%
filter(!dataset == "Sylph") %>%
#filter(!dataset == "Kraken") %>%
group_by(genus, dataset) %>%
dplyr::summarise(
mean_abundance = mean(rel_abun, na.rm = TRUE),
.groups = "drop"
) %>%
pivot_wider(
names_from = dataset,
values_from = mean_abundance,
values_fill = 0
) %>%
filter(!genus == "Other")
# Combine the datasets - Kraken
upset_data_genus <- upset_presence_genus %>%
dplyr::left_join(abundance_stats_genus, by = c("genus")) %>%
dplyr::rename("Kraken" = "Kraken.x",
"Culture" = "Culture.x",
"Kraken_abundance" = "Kraken.y",
"Culture_abundance" = "Culture.y")
# Filter those with < 0.001%
upset_data1_genus <- upset_data_genus %>%
mutate(
Kraken = as.numeric(Kraken),
Culture = as.numeric(Culture)
) %>%
# Filter out rows if either column have < 0.001%
filter(Kraken_abundance >= 0.001) # 223 genera remaining
# Kraken
# 32 overlapping genus
# 232 only detected in Kraken
# 9 only detected in culture
upset(
upset_data_genus,
intersect = c("Culture", "Kraken"),
name = "",
width_ratio = 0.1,
min_size = 1,
max_degree = 3,
base_annotations = list(
"Genera Count" = intersection_size(
counts = TRUE,
text = list(size = 3)
)
),
# Add side plots for abundance
stripes = upset_stripes(
geom = geom_segment(size = 6),
colors = c("white", "grey95")
),
# Change set size
set_sizes = upset_set_size() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()
),
# Add custom annotations
annotations = list(
"Culture abundance" = (
ggplot(mapping = aes(y = Culture_abundance)) +
geom_boxplot(fill = "#b1728f", alpha = 0.7) +
theme_minimal() +
labs(y = "Culture abundance (%)")
),
"Kraken abundance" = (
ggplot(mapping = aes(y = Kraken_abundance)) +
geom_boxplot(fill = "#073763", alpha = 0.7) +
theme_minimal() +
labs(y = "Kraken abundance (%)")
)
)
)
# Plot without boxplot
upset(
upset_data_genus,
intersect = c("Culture", "Kraken"),
name = "",
width_ratio = 0.1,
min_size = 1,
max_degree = 3,
base_annotations = list(
"Taxa Count" = intersection_size(
counts = TRUE,
text = list(size = 6)
) + theme(
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 14)
)
),
themes = upset_default_themes(
text = element_text(size = 12)
),
# Change set size
set_sizes = upset_set_size() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.title.x = element_blank()
)
)
# Sylph
#upset(
#  upset_data2,
#  intersect = c("Culture", "Sylph"),
#  name = "",
#  width_ratio = 0.1,
#  min_size = 1,
#  max_degree = 3,
#  base_annotations = list(
#    "Taxa Count" = intersection_size(
#      counts = TRUE,
#      text = list(size = 3)
#    )
#  ),
# Add side plots for abundance
#  stripes = upset_stripes(
#    geom = geom_segment(size = 6),
#    colors = c("white", "grey95")
#  ),
# Change set size
#  set_sizes = upset_set_size() +
#    theme(
#      axis.text.x = element_text(angle = 45, hjust = 1),
#      axis.title.x = element_blank()
#    ),
# Add custom annotations
#  annotations = list(
#    "Culture abundance" = (
#      ggplot(mapping = aes(y = Culture_abundance)) +
#        geom_boxplot(fill = "#b1728f", alpha = 0.7) +
#        theme_minimal() +
#        labs(y = "Culture abundance")
#    ),
#    "Sylph abundance" = (
#      ggplot(mapping = aes(y = Sylph_abundance)) +
#        geom_boxplot(fill = "#38761d", alpha = 0.7) +
#        theme_minimal() +
#        labs(y = "Sylph abundance")
#    )
#  )
#)
View(upset_presence)
View(upset_data1)
# Overlapping taxa
intersection_taxa <- upset_data1 %>%
filter(Culture == 1 & Kraken ==1) %>%
select(genus, body_site, site_type)
# Join data
intersection_data <- upset_data %>%
dplyr::inner_join(intersection_taxa, by = c("genus", "body_site", "site_type"))
# Set factor
intersection_data$genus <- factor(intersection_data$genus, levels = genus)
# Scatterplot - Sylph ----
#intersection_data %>%
#  mutate(body_site = factor(body_site, levels = c("Al","Ba", "Oc", "Na", "Um","Tw", "Vf", "Af"))) %>%
#  ggplot(aes(x = Culture_abundance/100, y = Sylph_abundance/100, color = genus)) +
#  geom_point(alpha = 0.7, size = 3) +
#  geom_smooth(method = "lm", color = "black", linetype = "dashed", se = TRUE, alpha = 0.2) +
#  stat_cor(
#    method = "spearman",
#    label.x.npc = 0.1,
#    label.y.npc = 1,
#    size = 5,
#    color = "black"
#  ) +
#  scale_color_manual(values = genus_colors) +
#  scale_shape_manual(
#values = c(
#  "Af" = 16,  # filled circle
#  "Al" = 17,  # filled triangle up
#  "Ba" = 15,  # filled square
#  "Na" = 18,  # filled diamond
#  "Oc" = 8,   # asterisk/star
#  "Tw" = 3,   # plus
#  "Um" = 4,   # X
#  "Vf" = 7    # square cross
#),
#  name = "Body Site"
#) +
#geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray50") +
#  scale_x_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
#  ) +
#  scale_y_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
#  ) +
#  labs(
#    title = NULL,
#    x = "Culture abundance",
#    y = "Sylph abundance"
#  ) +
#  theme_minimal(base_size = 18) +
#  theme(
#    panel.grid.minor = element_blank(),
#    axis.text.x = element_text(angle = 45, hjust = 1)) +
#  guides(color = guide_legend(ncol = 1)) +
#  facet_wrap(~ body_site, scales = "fixed")
# Scatterplot - Kraken ----
intersection_data %>%
#filter(!genus == "Cutibacterium") %>%
mutate(body_site = factor(body_site, levels = c("Al","Ba", "Oc", "Na", "Um","Tw", "Vf", "Af"))) %>%
ggplot(aes(x = Culture_abundance/100, y = Kraken_abundance/100, color = genus)) +
geom_point(alpha = 0.7, size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed", se = TRUE, alpha = 0.2) +
stat_cor(
method = "spearman",
label.x.npc = 0.1,
label.y.npc = 1,
size = 5,
color = "black"
) +
scale_color_manual(values = genus_colors) +
scale_shape_manual(
#values = c(
#  "Af" = 16,  # filled circle
#  "Al" = 17,  # filled triangle up
#  "Ba" = 15,  # filled square
#  "Na" = 18,  # filled diamond
#  "Oc" = 8,   # asterisk/star
#  "Tw" = 3,   # plus
#  "Um" = 4,   # X
#  "Vf" = 7    # square cross
#),
name = "Body Site"
) +
#geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray50") +
scale_x_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
scale_y_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
labs(
title = NULL,
x = "Culture abundance",
y = "Kraken abundance"
) +
theme_minimal(base_size = 18) +
theme(
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(ncol = 1)) +
facet_wrap(~ body_site, scales = "fixed")
intersection_data %>%
#filter(!genus == "Cutibacterium") %>%
mutate(body_site = factor(body_site, levels = c("Al","Ba", "Oc", "Na", "Um","Tw", "Vf", "Af"))) %>%
ggplot(aes(x = Culture_abundance/100, y = Kraken_abundance/100, color = genus)) +
geom_point(alpha = 0.7, size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed", se = TRUE, alpha = 0.2) +
stat_cor(
method = "spearman",
label.x.npc = 0.1,
label.y.npc = 1,
size = 5,
color = "black"
) +
scale_color_manual(values = genus_colors) +
scale_shape_manual(
#values = c(
#  "Af" = 16,  # filled circle
#  "Al" = 17,  # filled triangle up
#  "Ba" = 15,  # filled square
#  "Na" = 18,  # filled diamond
#  "Oc" = 8,   # asterisk/star
#  "Tw" = 3,   # plus
#  "Um" = 4,   # X
#  "Vf" = 7    # square cross
#),
name = "Body Site"
) +
#geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray50") +
scale_x_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
scale_y_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
labs(
title = NULL,
x = "Culture abundance",
y = "Kraken abundance"
) +
theme_minimal(base_size = 18) +
theme(
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(ncol = 1)) +
facet_wrap(~ body_site, scales = "fixed")
