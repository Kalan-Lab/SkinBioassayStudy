)) %>%
dplyr::rename("genus" = "Genus") %>%
select(dataset, genus, body_site, site_type, total_body_site_count, rel_abun)
View(culture_final)
# Summarize culture data
culture_final <- culture %>%
group_by(Genus, body_site, site_type) %>%
dplyr::summarise(
count = n(),
.groups = "drop"
) %>%
group_by(body_site) %>%
mutate(
total_body_site_count = sum(count),
rel_abun = (count / total_body_site_count) * 100
) %>%
ungroup() %>%
mutate(dataset =  "Culture") %>%
relocate(dataset, .before =1) %>%
mutate(Genus = case_when(
is.na(Genus) | Genus == "" ~ "Other",
TRUE ~ Genus
)) %>%
dplyr::rename("genus" = "Genus") %>%
select(dataset, genus, body_site, site_type, count, total_body_site_count, rel_abun)
View(culture_final)
# Summarize culture data
culture_final <- culture %>%
group_by(Genus, body_site, site_type) %>%
dplyr::summarise(
count = n(),
.groups = "drop"
) %>%
group_by(body_site) %>%
mutate(
total_body_site_count = sum(count),
rel_abun = (count / total_body_site_count)
) %>%
ungroup() %>%
mutate(dataset =  "Culture") %>%
relocate(dataset, .before =1) %>%
mutate(Genus = case_when(
is.na(Genus) | Genus == "" ~ "Other",
TRUE ~ Genus
)) %>%
dplyr::rename("genus" = "Genus") %>%
select(dataset, genus, body_site, site_type, count, total_body_site_count, rel_abun)
View(culture_final)
View(culture)
# Summarize culture data
culture_final <- culture %>%
group_by(Genus, body_site, site_type) %>%
filter(is.na(Genus)) %>%
dplyr::summarise(
count = n(),
.groups = "drop"
) %>%
group_by(body_site) %>%
mutate(
total_body_site_count = sum(count),
rel_abun = (count / total_body_site_count)
) %>%
ungroup() %>%
mutate(dataset =  "Culture") %>%
relocate(dataset, .before =1) %>%
dplyr::rename("genus" = "Genus") %>%
select(dataset, genus, body_site, site_type, count, total_body_site_count, rel_abun)
View(culture_final)
View(culture)
# Summarize culture data
culture_final <- culture %>%
filter(is.na(Genus)) %>%
group_by(Genus, body_site, site_type) %>%
dplyr::summarise(
count = n(),
.groups = "drop"
) %>%
group_by(body_site) %>%
mutate(
total_body_site_count = sum(count),
rel_abun = (count / total_body_site_count)
) %>%
ungroup() %>%
mutate(dataset =  "Culture") %>%
relocate(dataset, .before =1) %>%
mutate(Genus = case_when(
is.na(Genus) | Genus == "" ~ "Other",
TRUE ~ Genus
)) %>%
dplyr::rename("genus" = "Genus") %>%
select(dataset, genus, body_site, site_type, count, total_body_site_count, rel_abun)
View(culture_final)
# Summarize culture data
culture_final <- culture %>%
filter(!is.na(Genus)) %>%
group_by(Genus, body_site, site_type) %>%
dplyr::summarise(
count = n(),
.groups = "drop"
) %>%
group_by(body_site) %>%
mutate(
total_body_site_count = sum(count),
rel_abun = (count / total_body_site_count)
) %>%
ungroup() %>%
mutate(dataset =  "Culture") %>%
relocate(dataset, .before =1) %>%
mutate(Genus = case_when(
is.na(Genus) | Genus == "" ~ "Other",
TRUE ~ Genus
)) %>%
dplyr::rename("genus" = "Genus") %>%
select(dataset, genus, body_site, site_type, count, total_body_site_count, rel_abun)
View(culture_final)
View(culture_final)
# Create the data frame with genus, phylum, and colors
plot_data <- data.frame(
genus = c(
# Actinomycetota
"Cutibacterium", "Corynebacterium", "Citricoccus", "Micrococcus",
"Kocuria", "Rothia", "Brevibacterium", "Gordonia",
"Dermabacter", "Kytococcus", "Janibacter", "Dietzia",
"Microbacterium", "Brachybacterium", "Dermacoccus", "Nesterenkonia",
"Pseudoclavibacter", "Helcococcus", "Cellulosimicrobium", "Micromonospora",
"Rhodococcus",
# Bacteroidota
"Sphingobacterium",
# Bacillota
"Staphylococcus", "Bacillus", "Granulicatella", "Lysinibacillus",
"Paenibacillus", "Enterococcus",
# Pseudomonadota
"Klebsiella", "Citrobacter", "Enterobacter", "Raoultella", "Escherichia"
),
phylum = c(
rep("Actinomycetota", 21),
rep("Bacteroidota", 1),
rep("Bacillota", 6),
rep("Pseudomonadota", 5)
),
color = colors,
x = 1,  # Dummy x value
y = 1   # Dummy y value
)
View(culture_final)
# Set colors
colors <- c("#b1728f","#c89cb0","#dfc6d2","#efe2e8",
"#E69138","#edb273","#f5d3af","#fae9d7",
"#bc3e47","#d0777e","#e4b1b5","#f1d8da",
"#CBA92B","#dac26a","#eadcaa","#f4edd4",
"#CD8987", "#CDACA1", "#DCC4BC", "#EADCD7",
"#2C2C34",
"#493C61",
"#38761d","#739f60","#afc8a4","#d7e3d1",
"#3B7D6A", "#59B198",
"#073763","#517391","#9bafc0","#cdd7df","#E6EBEF")
genus <- c(
# Actinomycetota
"Cutibacterium","Corynebacterium", "Citricoccus", "Micrococcus",
"Kocuria","Rothia", "Brevibacterium","Gordonia",
"Dermabacter","Kytococcus", "Janibacter","Dietzia",
"Microbacterium","Brachybacterium","Dermacoccus","Nesterenkonia",
"Pseudoclavibacter","Helcococcus", "Cellulosimicrobium", "Micromonospora",
"Rhodococcus",
#Bacteroidota
"Sphingobacterium",
#Bacillota
"Staphylococcus","Bacillus","Granulicatella","Lysinibacillus",
"Paenibacillus", "Enterococcus",
#Pseudomonadota
"Klebsiella","Citrobacter","Enterobacter", "Raoultella", "Escherichia")
# Create a named vector mapping genera to colors
genus_colors <- setNames(colors, genus)
# Calculate percentage and angles
culture_final1 <- culture_final %>%
group_by(body_site) %>%
mutate(
percentage = (count / sum(count)) * 100,
label_pos = cumsum(count) - count/2
)
View(culture_final1)
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 4))
# Set factor
culture_final1$genus <- factor(culture_final1$genus, levels = genus)
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 4))
View(culture_final1)
View(culture_final)
# Set colors
colors <- c("#b1728f","#c89cb0","#dfc6d2","#efe2e8",
"#E69138","#edb273","#f5d3af","#fae9d7",
"#bc3e47","#d0777e","#e4b1b5","#f1d8da",
"#CBA92B","#dac26a","#eadcaa","#f4edd4",
"#CD8987", "#CDACA1", "#DCC4BC", "#EADCD7",
"#2C2C34", "#545463", "#7B7B8E",
"#493C61",
"#38761d","#739f60","#afc8a4","#d7e3d1",
"#3B7D6A", "#59B198","#82C4B2", "#ACD8CC",
"#073763","#517391","#9bafc0","#cdd7df","#E6EBEF",
"#4861AD")
genus <- c(
# Actinomycetota
"Cutibacterium","Corynebacterium", "Citricoccus", "Micrococcus",
"Kocuria","Rothia", "Brevibacterium","Gordonia",
"Dermabacter","Kytococcus", "Janibacter","Dietzia",
"Microbacterium","Brachybacterium","Dermacoccus","Nesterenkonia",
"Pseudoclavibacter","Helcococcus", "Cellulosimicrobium", "Micromonospora",
"Rhodococcus", "Aestuariimicrobium", "Pseudoglutamicibacter",
#Bacteroidota
"Sphingobacterium",
#Bacillota
"Staphylococcus","Bacillus","Granulicatella","Lysinibacillus",
"Paenibacillus", "Enterococcus", "Niallia", "Oceanobacillus",
#Pseudomonadota
"Klebsiella","Citrobacter","Enterobacter", "Raoultella", "Escherichia",
"Morganella"
)
# Create a named vector mapping genera to colors
genus_colors <- setNames(colors, genus)
# Calculate percentage and angles
culture_final1 <- culture_final %>%
group_by(body_site) %>%
mutate(
percentage = (count / sum(count)) * 100,
label_pos = cumsum(count) - count/2
)
# Set factor
culture_final1$genus <- factor(culture_final1$genus, levels = genus)
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 4))
# Set colors
colors <- c("#b1728f","#c89cb0","#dfc6d2","#efe2e8",
"#E69138","#edb273","#f5d3af","#fae9d7",
"#bc3e47","#d0777e","#e4b1b5","#f1d8da",
"#CBA92B","#dac26a","#eadcaa","#f4edd4",
"#CD8987", "#CDACA1", "#DCC4BC", "#EADCD7",
"#2C2C34", "#545463", "#7B7B8E",
"#493C61",
"#38761d","#739f60","#afc8a4","#d7e3d1",
"#3B7D6A", "#59B198","#82C4B2", "#ACD8CC",
"#3E5641",
"#073763","#517391","#9bafc0","#cdd7df","#E6EBEF",
"#4861AD",
"#26547C")
genus <- c(
# Actinomycetota
"Cutibacterium","Corynebacterium", "Citricoccus", "Micrococcus",
"Kocuria","Rothia", "Brevibacterium","Gordonia",
"Dermabacter","Kytococcus", "Janibacter","Dietzia",
"Microbacterium","Brachybacterium","Dermacoccus","Nesterenkonia",
"Pseudoclavibacter","Helcococcus", "Cellulosimicrobium", "Micromonospora",
"Rhodococcus", "Aestuariimicrobium", "Pseudoglutamicibacter",
#Bacteroidota
"Sphingobacterium",
#Bacillota
"Staphylococcus","Bacillus","Granulicatella","Lysinibacillus",
"Paenibacillus", "Enterococcus", "Niallia", "Oceanobacillus",
"Peribacillus",
#Pseudomonadota
"Klebsiella","Citrobacter","Enterobacter", "Raoultella", "Escherichia",
"Morganella",
"Penicillium"
)
# Create a named vector mapping genera to colors
genus_colors <- setNames(colors, genus)
# Set colors
colors <- c("#b1728f","#c89cb0","#dfc6d2","#efe2e8",
"#E69138","#edb273","#f5d3af","#fae9d7",
"#bc3e47","#d0777e","#e4b1b5","#f1d8da",
"#CBA92B","#dac26a","#eadcaa","#f4edd4",
"#CD8987", "#CDACA1", "#DCC4BC", "#EADCD7",
"#2C2C34", "#545463", "#7B7B8E",
"#493C61",
"#38761d","#739f60","#afc8a4","#d7e3d1",
"#3B7D6A", "#59B198","#82C4B2", "#ACD8CC",
"#3E5641",
"#073763","#517391","#9bafc0","#cdd7df","#E6EBEF",
"#4861AD",
"#26547C")
genus <- c(
# Actinomycetota
"Cutibacterium","Corynebacterium", "Citricoccus", "Micrococcus",
"Kocuria","Rothia", "Brevibacterium","Gordonia",
"Dermabacter","Kytococcus", "Janibacter","Dietzia",
"Microbacterium","Brachybacterium","Dermacoccus","Nesterenkonia",
"Pseudoclavibacter","Helcococcus", "Cellulosimicrobium", "Micromonospora",
"Rhodococcus", "Aestuariimicrobium", "Pseudoglutamicibacter",
#Bacteroidota
"Sphingobacterium",
#Bacillota
"Staphylococcus","Bacillus","Granulicatella","Lysinibacillus",
"Paenibacillus", "Enterococcus", "Niallia", "Oceanobacillus",
"Peribacillus",
#Pseudomonadota
"Klebsiella","Citrobacter","Enterobacter", "Raoultella", "Escherichia",
"Morganella",
"Penicillium"
)
# Create a named vector mapping genera to colors
genus_colors <- setNames(colors, genus)
# Calculate percentage and angles
culture_final1 <- culture_final %>%
group_by(body_site) %>%
mutate(
percentage = (count / sum(count)) * 100,
label_pos = cumsum(count) - count/2
)
# Set factor
culture_final1$genus <- factor(culture_final1$genus, levels = genus)
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 4))
culture_final1 %>%
group_by(body_site) %>%
summarise(total_percentage = sum(percentage))
# Calculate percentage and angles
culture_final1 <- culture_final %>%
group_by(body_site) %>%
arrange(body_site, desc(count)) %>%
mutate(
percentage = (count / sum(count)) * 100,
label_pos = cumsum(count) - count/2
) %>%
ungroup()
View(culture_final1)
# Set factor
culture_final1$genus <- factor(culture_final1$genus, levels = genus)
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 4))
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
#coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 4))
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 4))
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 2))
# Calculate percentage and angles
culture_final1 <- culture_final %>%
group_by(body_site) %>%
arrange(body_site, desc(count)) %>%
mutate(
percentage = (count / sum(count)) * 100
) %>%
ungroup()
# Set factor
culture_final1$genus <- factor(culture_final1$genus, levels = genus)
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 2))
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors, drop = FALSE) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 2))
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1, position = "stack") +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 2))
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3) +
scale_fill_manual(values = genus_colors, scales = "free") +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 2))
# Create faceted pie charts
ggplot(culture_final1, aes(x = "", y = count, fill = genus)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
facet_wrap(~ body_site, ncol = 3, scales = "free") +
scale_fill_manual(values = genus_colors) +
theme_void() +
theme(
strip.text = element_text(size = 11, face = "bold"),
legend.position = "right",
legend.title = element_blank(),
legend.text = element_text(size = 9)
) +
guides(fill = guide_legend(ncol = 2))
sum(culture_final1$count)
