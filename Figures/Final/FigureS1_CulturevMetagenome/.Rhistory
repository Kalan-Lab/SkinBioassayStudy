unique(species1$species)
count(unique(species1$species_name))
View(species)
summary <- species1 %>%
group_by(phylum, genus) %>%
summarise(n = n())
View(summary)
# With updated Table S2 including MALDI data
updated <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250911_SupTable2_Updated.xlsx")
View(updated)
# Import Table S2
df <- read_excel("~/Documents/GitHub/SkinBioassayStudy/Figures/Final/FigureS1_CulturevMetagenome/Sup Tables (1).xlsx",
sheet = "Table S2 - Updated")
df <- df[-1,]        # Remove the NA row
names(df) <- df[1,]  # Set first row as column names
df <- df[-1,]        # Remove the first row
# Import Biotyper/WGS results
df1 <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/SkinBioassayPaper_Strains_MALDI_WGS.xlsx",
sheet = "Final")
View(df1)
match <- df1 %>%
filter(Genus_16S == Genus)
View(match)
missing <- df1 %>%
filter(is.na(Genus_16S) | is.na(Genus))
View(missing)
# Determine those with mismatch, match, or missing data
mismatches <- df1 %>%
filter(Genus_16S != Genus)
View(mismatches)
# Strains that agree with 16S
clean <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250731_Bioassay_IDs_Clean_JF.xlsx",
sheet = "Final")
# Strains that do NOT agree with 16S
inprogress <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250731_Bioassay_IDs_Clean_JF.xlsx",
sheet = "InProgress")
# GTDB-tk results
gtdbtk.bac120.summary <- read.delim("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/SkinBioassayPaper_Genomes/gtdbtk.bac120.summary.tsv")
# Mapping file for GTDB-tk results
mapping <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/SeqCoast_LK_Mapping.xlsx")
# Basic merge with different column names
gtdb_merged <- merge(gtdbtk.bac120.summary, mapping, by.x = "user_genome", by.y = "SeqCoastName")
View(gtdb_merged)
# Re-assign naming
inprogress1 <- inprogress %>%
mutate(LK = case_when(
LK == "LK722 (Y)" ~ "LK722(Y)",
LK == "LK681 (small)" ~ "LK681(s)",
LK == "LK692 (small)" ~ "LK692(s)",
TRUE ~ LK
))
# Merging two datasets
inprogress_merged <- merge(inprogress1, gtdb_merged, by = "LK")
View(inprogress_merged)
View(match)
View(match)
View(match)
View(gtdbtk.bac120.summary)
View(inprogress_merged)
# Separate classification column
inprogress_merged_separated <- inprogress_merged %>%
separate(classification,
into = c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"),
sep = ";") %>%
mutate(Species = gsub("s__", "", Species)) %>%
select(LK, Species) %>%
separate(Species,
into = c("Genus", "Species"),
sep = " ",
extra = "merge",  # handles cases with more than 2 words
fill = "right") %>%
mutate(Genus = case_when(
LK == "LK1299" ~ "Corynebacterium",
TRUE ~ Genus
)) %>%
rename(Strain = LK)
View(inprogress_merged_separated)
View(inprogress_merged)
View(inprogress_merged_separated)
# Separate classification column
inprogress_merged_separated <- inprogress_merged %>%
separate(classification,
into = c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"),
sep = ";") %>%
mutate(Species = gsub("s__", "", Species)) %>%
#select(LK, Species) %>%
separate(Species,
into = c("Genus", "Species"),
sep = " ",
extra = "merge",  # handles cases with more than 2 words
fill = "right") %>%
mutate(Genus = case_when(
LK == "LK1299" ~ "Corynebacterium",
TRUE ~ Genus
)) %>%
rename(Strain = LK)
View(inprogress_merged_separated)
# Combine
final <- rbind(clean, inprogress_merged_separated)
# Separate classification column
inprogress_merged_separated <- inprogress_merged %>%
separate(classification,
into = c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"),
sep = ";") %>%
mutate(Species = gsub("s__", "", Species)) %>%
select(LK, Species) %>%
separate(Species,
into = c("Genus", "Species"),
sep = " ",
extra = "merge",  # handles cases with more than 2 words
fill = "right") %>%
mutate(Genus = case_when(
LK == "LK1299" ~ "Corynebacterium",
TRUE ~ Genus
)) %>%
rename(Strain = LK)
View(inprogress_merged_separated)
# Separate classification column
inprogress_merged_separated <- inprogress_merged %>%
separate(classification,
into = c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"),
sep = ";") %>%
mutate(Species = gsub("s__", "", Species))
View(inprogress_merged_separated)
# Separate classification column
inprogress_merged_separated <- inprogress_merged %>%
separate(classification,
into = c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"),
sep = ";") %>%
mutate(Species = gsub("s__", "", Species)) %>%
select(LK, Species) %>%
separate(Species,
into = c("Genus", "Species"),
sep = " ",
extra = "merge",  # handles cases with more than 2 words
fill = "right")
View(inprogress_merged_separated)
# Separate classification column
inprogress_merged_separated <- inprogress_merged %>%
separate(classification,
into = c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"),
sep = ";") %>%
mutate(Species = gsub("s__", "", Species)) %>%
select(LK, Species) %>%
separate(Species,
into = c("Genus", "Species"),
sep = " ",
extra = "merge",  # handles cases with more than 2 words
fill = "right") %>%
mutate(Genus = case_when(
LK == "LK1299" ~ "Corynebacterium",
TRUE ~ Genus
)) %>%
rename(Strain = LK)
View(clean)
View(inprogress_merged_separated)
# Combine
final <- rbind(clean, inprogress_merged_separated)
# Compare with 16S
id_16s <- read_excel("Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250529_BioassayPaperIDs_Master.xlsx",
sheet = "16S")
View(final)
inprogress_merged_separated$data <- "genome"
clean$data <- "MALDI"
# Combine
final <- rbind(clean, inprogress_merged_separated)
View(final)
# Compare with 16S
id_16s <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250529_BioassayPaperIDs_Master.xlsx",
sheet = "16S")
View(id_16s)
# Merge 16S and Maldi/WGS results
final_merge <- merge(id_16s, final, by = "Strain", all = T)
View(final_merge)
writexl::write_xlsx(final_merge, "~/Downloads/SkinBioassayPaper_Strains_MALDI_WGS.xlsx")
View(final_merge)
# Import Biotyper/WGS results
df1 <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/SkinBioassayPaper_Strains_MALDI_WGS.xlsx",
sheet = "Final")
View(df1)
View(df)
library(readxl)
library(dplyr)
library(tidyr)
# Import Table S2
df <- read_excel("~/Documents/GitHub/SkinBioassayStudy/Figures/Final/FigureS1_CulturevMetagenome/Sup Tables (1).xlsx",
sheet = "Table S2 - Updated")
df <- df[-1,]        # Remove the NA row
names(df) <- df[1,]  # Set first row as column names
df <- df[-1,]        # Remove the first row
# Import Biotyper/WGS results
df1 <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/SkinBioassayPaper_Strains_MALDI_WGS_Updated.xlsx",
sheet = "Final")
View(df1)
View(inprogress_merged_separated)
View(inprogress_merged)
# Separate classification column
inprogress_merged_separated <- inprogress_merged %>%
separate(classification,
into = c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"),
sep = ";",
remove = FALSE) %>%
mutate(Species = gsub("s__", "", Species)) %>%
select(LK, classification, Species) %>%
separate(Species,
into = c("Genus", "Species"),
sep = " ",
extra = "merge",  # handles cases with more than 2 words
fill = "right") %>%
mutate(Genus = case_when(
LK == "LK1299" ~ "Corynebacterium",
TRUE ~ Genus
)) %>%
rename(Strain = LK)
View(inprogress_merged_separated)
View(culture)
# Strains that agree with 16S
clean <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250731_Bioassay_IDs_Clean_JF.xlsx",
sheet = "Final")
# Strains that do NOT agree with 16S
inprogress <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250731_Bioassay_IDs_Clean_JF.xlsx",
sheet = "InProgress")
# GTDB-tk results
gtdbtk.bac120.summary <- read.delim("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/SkinBioassayPaper_Genomes/gtdbtk.bac120.summary.tsv")
# Mapping file for GTDB-tk results
mapping <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/SeqCoast_LK_Mapping.xlsx")
# Basic merge with different column names
gtdb_merged <- merge(gtdbtk.bac120.summary, mapping, by.x = "user_genome", by.y = "SeqCoastName")
# Re-assign naming
inprogress1 <- inprogress %>%
mutate(LK = case_when(
LK == "LK722 (Y)" ~ "LK722(Y)",
LK == "LK681 (small)" ~ "LK681(s)",
LK == "LK692 (small)" ~ "LK692(s)",
TRUE ~ LK
))
# Merging two datasets
inprogress_merged <- merge(inprogress1, gtdb_merged, by = "LK")
# Separate classification column
inprogress_merged_separated <- inprogress_merged %>%
separate(classification,
into = c("Domain", "Phylum", "Class", "Order", "Family", "Genus", "Species"),
sep = ";",
remove = FALSE) %>%
mutate(Species = gsub("s__", "", Species)) %>%
select(LK, classification, Species) %>%
separate(Species,
into = c("Genus", "Species"),
sep = " ",
extra = "merge",  # handles cases with more than 2 words
fill = "right") %>%
mutate(Genus = case_when(
LK == "LK1299" ~ "Corynebacterium",
TRUE ~ Genus
)) %>%
rename(Strain = LK)
inprogress_merged_separated$data <- "genome"
clean$data <- "MALDI"
clean$classification <- ""
# Combine
final <- rbind(clean, inprogress_merged_separated)
View(final)
# Combine
final <- rbind(clean, inprogress_merged_separated)
# Compare with 16S
id_16s <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250529_BioassayPaperIDs_Master.xlsx",
sheet = "16S")
# Merge 16S and Maldi/WGS results
final_merge <- merge(id_16s, final, by = "Strain", all = T)
View(final_merge)
writexl::write_xlsx(final_merge, "~/Downloads/SkinBioassayPaper_Strains_MALDI_WGS.xlsx")
writexl::write_xlsx(final_merge, "~/Downloads/SkinBioassayPaper_Strains_MALDI_WGS.xlsx")
writexl::write_xlsx(final_merge, "~/Downloads/SkinBioassayPaper_Strains_MALDI_WGS.xlsx")
# Import Table S2
df <- read_excel("~/Documents/GitHub/SkinBioassayStudy/Figures/Final/FigureS1_CulturevMetagenome/Sup Tables (1).xlsx",
sheet = "Table S2 - Updated")
df <- df[-1,]        # Remove the NA row
names(df) <- df[1,]  # Set first row as column names
df <- df[-1,]        # Remove the first row
# Import Biotyper/WGS results
df1 <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/SkinBioassayPaper_Strains_MALDI_WGS_Updated1.xlsx",
sheet = "Final")
View(df1)
# Determine those with mismatch, match, or missing data
mismatches <- df1 %>%
filter(Genus_16S != Genus)
match <- df1 %>%
filter(Genus_16S == Genus)
missing <- df1 %>%
filter(is.na(Genus_16S) | is.na(Genus))
View(match)
View(mismatches)
View(missing)
View(df)
View(df1)
# Find matching positions
match_idx <- match(df$`Strain ID`, df1$Strain)
view(match_idx)
# Update Species where matches exist
rows_to_update <- !is.na(match_idx)
df$Species[rows_to_update] <- df1$Species[match_idx[rows_to_update]]
View(df)
View(df1)
# Find matching positions
match_idx <- match(df$`Strain ID`, match$Strain)
view(match_idx)
# Update Species where matches exist
rows_to_update <- !is.na(match_idx)
df$Species[rows_to_update] <- match$Species[match_idx[rows_to_update]]
View(df)
colnames(df)
df$`GTDB R202 Taxonomy`[rows_to_update] <- match$classification[match_idx[rows_to_update]]
View(df)
View(df)
# Import Table S2
df <- read_excel("~/Documents/GitHub/SkinBioassayStudy/Figures/Final/FigureS1_CulturevMetagenome/Sup Tables (1).xlsx",
sheet = "Table S2 - Updated")
df <- df[-1,]        # Remove the NA row
names(df) <- df[1,]  # Set first row as column names
df <- df[-1,]        # Remove the first row
# Find matching positions
match_idx <- match(df$`Strain ID`, match$Strain)
# Update Species where matches exist
rows_to_update <- !is.na(match_idx)
df$Species[rows_to_update] <- match$Species[match_idx[rows_to_update]]
df$`GTDB R202 Taxonomy`[rows_to_update] <- match$classification[match_idx[rows_to_update]]
View(df)
writexl::write_xlsx(df, "/Users/thynguyen/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250925_SupTable2_Updated.xlsx")
# Update LK504
# Update for only one specific strain ID
strain_to_update <- "LK504"
df$Species[df$`Strain ID` == strain_to_update] <- match$Species[match$Strain == strain_to_update]
df$Genus[df$`Strain ID` == strain_to_update] <- match$Genus[match$Strain == strain_to_update]
# Import Table S2
df <- read_excel("~/Documents/GitHub/SkinBioassayStudy/Figures/Final/FigureS1_CulturevMetagenome/Sup Tables (1).xlsx",
sheet = "Table S2 - Updated")
df <- df[-1,]        # Remove the NA row
names(df) <- df[1,]  # Set first row as column names
df <- df[-1,]        # Remove the first row
View(df)
# Find matching positions
match_idx <- match(df$`Strain ID`, match$Strain)
# Update Species where matches exist
rows_to_update <- !is.na(match_idx)
df$Species[rows_to_update] <- match$Species[match_idx[rows_to_update]]
df$`GTDB R202 Taxonomy`[rows_to_update] <- match$classification[match_idx[rows_to_update]]
# Update LK504
# Update for only one specific strain ID
strain_to_update <- "LK504"
df$Species[df$`Strain ID` == strain_to_update] <- missing$Species[missing$Strain == strain_to_update]
View(df)
View(match)
writexl::write_xlsx(df, "/Users/thynguyen/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250925_SupTable2_Updated.xlsx")
# With updated Table S2 including MALDI data
updated <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250925_SupTable2_Updated.xlsx")
View(updated)
# With updated Table S2 including MALDI data
updated <- read_excel("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/250731_Biotyper_Results/250925_SupTable2_Updated.xlsx")
updated1 <- updated %>%
select(`Strain ID`, Phylum, Genus, Species, species_name, `GTDB R202 Taxonomy`) %>%
separate(`GTDB R202 Taxonomy`,
into = c("domain", "phylum", "class", "order", "family", "genus", "species"),
sep = ";",
remove = FALSE)
updated1 <- updated %>%
select(`Strain ID`, Genus, Species, species_name, `GTDB R202 Taxonomy`) %>%
separate(`GTDB R202 Taxonomy`,
into = c("domain", "phylum", "class", "order", "family", "genus", "species"),
sep = ";",
remove = FALSE)
updated1 <- updated %>%
select(`Strain ID`, Genus, Species, `GTDB R202 Taxonomy`) %>%
separate(`GTDB R202 Taxonomy`,
into = c("domain", "phylum", "class", "order", "family", "genus", "species"),
sep = ";",
remove = FALSE)
updated1 <- updated %>%
mutate(species_name = if_else(is.na(Species),
NA_character_,
paste(Genus, Species, sep = " "))) %>%
mutate(Phylum = case_when(
Genus %in% names(phylum_mapping) ~ phylum_mapping[Genus],
TRUE ~ "Unknown"
)) %>%
select(`Strain ID`, Phylum, Genus, Species, species_name, `GTDB R202 Taxonomy`) %>%
separate(`GTDB R202 Taxonomy`,
into = c("domain", "phylum", "class", "order", "family", "genus", "species"),
sep = ";",
remove = FALSE)
View(updated1)
summary <- updated1 %>%
group_by(phylum, genus) %>%
summarise(n = n())
View(summary)
# By 16S
summary <- updated1 %>%
group_by(Phylum, Genus) %>%
summarise(n = n())
View(summary)
summary1 <- updated1 %>%
group_by(phylum, genus, species) %>%
summarise(n = n())
View(summary1)
# Species
summary1 <- updated1 %>%
group_by(Phylum, Genus, Species) %>%
summarise(n = n())
View(summary1)
# Species
summary1 <- updated1 %>%
group_by(Phylum, Genus, Species, species_name) %>%
summarise(n = n())
View(summary1)
unique(summary1$species_name)
# Species
summary1 <- updated1 %>%
group_by(phylum, genus, species) %>%
summarise(n = n())
unique(summary1$species)
# By GTDB
# Genus
summary1 <- updated1 %>%
group_by(phylum) %>%
summarise(n = n())
View(summary1)
# By 16S
# Phylum
summary3 <- updated1 %>%
group_by(Phylum) %>%
summarise(n = n())
View(summary3)
# By GTDB
# Genus
summary1 <- updated1 %>%
group_by(phylum, genus) %>%
summarise(n = n())
# Species
summary2 <- updated1 %>%
group_by(phylum, genus, species) %>%
summarise(n = n())
# By 16S
# Phylum
summary3 <- updated1 %>%
group_by(Phylum) %>%
summarise(n = n())
# Genus
summary4 <- updated1 %>%
group_by(Phylum, Genus) %>%
summarise(n = n())
# Species
summary5 <- updated1 %>%
group_by(Phylum, Genus, Species, species_name) %>%
summarise(n = n())
# Create a list of dataframes with sheet names
sheets_list <- list(
"Genus_GTDB" = summary1,
"Species_GTDB" = summary2,
"Phylum_16S" = summary3,
"Genus_16S" = summary4,
"Species_16S" = summary4,
)
# Create a list of dataframes with sheet names
sheets_list <- list(
"Genus_GTDB" = summary1,
"Species_GTDB" = summary2,
"Phylum_16S" = summary3,
"Genus_16S" = summary4,
"Species_16S" = summary5,
)
# Write to Excel file
writexl::write_xlsx(sheets_list, path = "/Users/thynguyen/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/StrainList_Distribution_Updated.xlsx")
# By GTDB
# Genus
summary1 <- updated1 %>%
group_by(phylum, genus) %>%
summarise(n = n())
# Species
summary2 <- updated1 %>%
group_by(phylum, genus, species) %>%
summarise(n = n())
# By 16S
# Phylum
summary3 <- updated1 %>%
group_by(Phylum) %>%
summarise(n = n())
# Genus
summary4 <- updated1 %>%
group_by(Phylum, Genus) %>%
summarise(n = n())
# Species
summary5 <- updated1 %>%
group_by(Phylum, Genus, Species, species_name) %>%
summarise(n = n())
# Create a list of dataframes with sheet names
sheets_list <- list(
"Genus_GTDB" = summary1,
"Species_GTDB" = summary2,
"Phylum_16S" = summary3,
"Genus_16S" = summary4,
"Species_16S" = summary5,
)
# Create a list of dataframes with sheet names
sheets_list <- list(
"Genus_GTDB" = summary1,
"Species_GTDB" = summary2,
"Phylum_16S" = summary3,
"Genus_16S" = summary4,
"Species_16S" = summary5
)
View(sheets_list)
# Write to Excel file
writexl::write_xlsx(sheets_list, path = "/Users/thynguyen/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/StrainList_Distribution_Updated.xlsx")
