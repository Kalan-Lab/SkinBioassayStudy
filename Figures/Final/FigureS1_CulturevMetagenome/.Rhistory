upset(
upset_data1,
intersect = c("Culture", "Kraken"),
name = "",
width_ratio = 0.1,
min_size = 1,
max_degree = 3,
base_annotations = list(
"Taxa Count" = intersection_size(
counts = TRUE,
text = list(size = 3)
)
),
# Add side plots for abundance
stripes = upset_stripes(
geom = geom_segment(size = 6),
colors = c("white", "grey95")
),
# Change set size
set_sizes = upset_set_size() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()
),
# Add custom annotations
annotations = list(
"Culture abundance" = (
ggplot(mapping = aes(y = Culture_abundance)) +
geom_boxplot(fill = "#b1728f", alpha = 0.7) +
theme_minimal() +
labs(y = "Culture abundance")
),
"Kraken abundance" = (
ggplot(mapping = aes(y = Kraken_abundance)) +
geom_boxplot(fill = "#073763", alpha = 0.7) +
theme_minimal() +
labs(y = "Kraken abundance")
)
)
)
upset(
upset_data1,
intersect = c("Culture", "Kraken"),
name = "",
width_ratio = 0.1,
min_size = 1,
max_degree = 3,
base_annotations = list(
"Taxa Count" = intersection_size(
counts = TRUE,
text = list(size = 3)
)
),
# Add side plots for abundance
stripes = upset_stripes(
geom = geom_segment(size = 6),
colors = c("white", "grey95")
),
# Change set size
set_sizes = upset_set_size() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()
)
)
# Overlapping taxa
intersection_taxa <- upset_data1 %>%
filter(Culture == 1 & Kraken ==1) %>%
select(genus, body_site, site_type)
# Join data
intersection_data <- upset_data %>%
dplyr::inner_join(intersection_taxa, by = c("genus", "body_site", "site_type"))
# Set factor
intersection_data$genus <- factor(intersection_data$genus, levels = genus)
# Scatterplot - Kraken ----
intersection_data %>%
filter(!genus == "Cutibacterium") %>%
mutate(body_site = factor(body_site, levels = c("Al","Ba", "Oc", "Na", "Um","Tw", "Vf", "Af"))) %>%
ggplot(aes(x = Culture_abundance/100, y = Kraken_abundance/100, color = genus)) +
geom_point(alpha = 0.7, size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed", se = TRUE, alpha = 0.2) +
stat_cor(
method = "spearman",
label.x.npc = 0.1,
label.y.npc = 1,
size = 5,
color = "black"
) +
scale_color_manual(values = genus_colors) +
scale_shape_manual(
#values = c(
#  "Af" = 16,  # filled circle
#  "Al" = 17,  # filled triangle up
#  "Ba" = 15,  # filled square
#  "Na" = 18,  # filled diamond
#  "Oc" = 8,   # asterisk/star
#  "Tw" = 3,   # plus
#  "Um" = 4,   # X
#  "Vf" = 7    # square cross
#),
name = "Body Site"
) +
#geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray50") +
scale_x_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
scale_y_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
labs(
title = NULL,
x = "Culture abundance",
y = "Kraken abundance"
) +
theme_minimal(base_size = 18) +
theme(
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(ncol = 1)) +
facet_wrap(~ body_site, scales = "fixed")
intersection_data %>%
filter(!genus == "Cutibacterium") %>%
mutate(body_site = factor(body_site, levels = c("Al","Ba", "Oc", "Na", "Um","Tw", "Vf", "Af"))) %>%
ggplot(aes(x = Culture_abundance/100, y = Kraken_abundance/100, color = genus)) +
geom_point(alpha = 0.7, size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed", se = TRUE, alpha = 0.2) +
stat_cor(
method = "spearman",
label.x.npc = 0.1,
label.y.npc = 1,
size = 5,
color = "black"
) +
scale_color_manual(values = genus_colors) +
scale_shape_manual(
#values = c(
#  "Af" = 16,  # filled circle
#  "Al" = 17,  # filled triangle up
#  "Ba" = 15,  # filled square
#  "Na" = 18,  # filled diamond
#  "Oc" = 8,   # asterisk/star
#  "Tw" = 3,   # plus
#  "Um" = 4,   # X
#  "Vf" = 7    # square cross
#),
name = "Body Site"
) +
#geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray50") +
scale_x_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
scale_y_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
labs(
title = NULL,
x = "Culture abundance",
y = "Kraken abundance"
) +
theme_minimal(base_size = 18) +
theme(
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(ncol = 1)) +
facet_wrap(~ body_site, scales = "fixed")
View(intersection_taxa)
View(intersection_data)
upset(
upset_data1,
intersect = c("Culture", "Kraken"),
name = "",
width_ratio = 0.1,
min_size = 1,
max_degree = 3,
base_annotations = list(
"Taxa Count" = intersection_size(
counts = TRUE,
text = list(size = 3)
)
),
# Add side plots for abundance
stripes = upset_stripes(
geom = geom_segment(size = 6),
colors = c("white", "grey95")
),
# Change set size
set_sizes = upset_set_size() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.x = element_blank()
)
)
intersection_data %>%
#filter(!genus == "Cutibacterium") %>%
mutate(body_site = factor(body_site, levels = c("Al","Ba", "Oc", "Na", "Um","Tw", "Vf", "Af"))) %>%
ggplot(aes(x = Culture_abundance/100, y = Kraken_abundance/100, color = genus)) +
geom_point(alpha = 0.7, size = 3) +
geom_smooth(method = "lm", color = "black", linetype = "dashed", se = TRUE, alpha = 0.2) +
stat_cor(
method = "spearman",
label.x.npc = 0.1,
label.y.npc = 1,
size = 5,
color = "black"
) +
scale_color_manual(values = genus_colors) +
scale_shape_manual(
#values = c(
#  "Af" = 16,  # filled circle
#  "Al" = 17,  # filled triangle up
#  "Ba" = 15,  # filled square
#  "Na" = 18,  # filled diamond
#  "Oc" = 8,   # asterisk/star
#  "Tw" = 3,   # plus
#  "Um" = 4,   # X
#  "Vf" = 7    # square cross
#),
name = "Body Site"
) +
#geom_abline(slope = 1, intercept = 0, linetype = "dashed", color = "gray50") +
scale_x_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
scale_y_log10(
# breaks = c(0.001, 0.01, 0.1, 1),
# labels = c("0.001", "0.01", "0.1", "1")
) +
labs(
title = NULL,
x = "Culture abundance",
y = "Kraken abundance"
) +
theme_minimal(base_size = 18) +
theme(
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1)) +
guides(color = guide_legend(ncol = 1)) +
facet_wrap(~ body_site, scales = "fixed")
library(readr)
bioassay_data_new_reduced <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/ssandstrom/skin_bioassay_paper_files/fig_3/bioassay_data_new_reduced.csv")
View(bioassay_data_new_reduced)
strain_list_reduced_for_bioassay <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/ssandstrom/skin_bioassay_paper_files/strain_list_reduced for bioassay.csv")
View(strain_list_reduced_for_bioassay)
raw_bioassay <- <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/2025-09-22_1406_PRINT.csv")
raw_bioassay <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/2025-09-22_1406_PRINT.csv")
View(raw_bioassay)
raw_bioassay <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/2025-09-22_1409_PRINT.csv")
View(raw_bioassay)
View(raw_bioassay)
comparison <- list(
unique_to_df1 = anti_join(df1, df2, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(df2, df1, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(df1, df2, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
comparison <- list(
unique_to_df1 = anti_join(raw_bioassay, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(strain_list_reduced_for_bioassay, raw_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(raw_bioassay, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(comparison)
bioassay_data_new_reduced <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/ssandstrom/skin_bioassay_paper_files/fig_3/bioassay_data_new_reduced.csv")
strain_list_reduced_for_bioassay <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/ssandstrom/skin_bioassay_paper_files/strain_list_reduced for bioassay.csv")
raw_bioassay <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/unguyen2/bioassay_data/2025-09-22_1409_PRINT.csv")
comparison <- list(
unique_to_df1 = anti_join(raw_bioassay, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(strain_list_reduced_for_bioassay, raw_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(raw_bioassay, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
comparison1 <- list(
unique_to_df1 = anti_join(raw_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(bioassay_data_new_reducedy, raw_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(raw_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
comparison1 <- list(
unique_to_df1 = anti_join(raw_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(bioassay_data_new_reduced, raw_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(raw_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(comparison1)
# Compare differences between the two datasets by Strain_ID
comparison <- list(
unique_to_df1 = anti_join(raw_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(bioassay_data_new_reduced, raw_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(raw_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(comparison1)
comparison1[["unique_to_df1"]]
View(comparison1)
View(comparison)
View(strain_list_reduced_for_bioassay)
View(comparison)
library(readr)
strain_list_reduced_for_bioassay <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/ssandstrom/skin_bioassay_paper_files/strain_list_reduced for bioassay.csv")
View(strain_list_reduced_for_bioassay)
# Compare differences between the two datasets by Strain_ID
comparison1 <- list(
unique_to_df1 = anti_join(raw_bioassay, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(strain_list_reduced_for_bioassay, raw_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(raw_bioassay, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(comparison1)
comparison1[["unique_to_df1"]]
library(readr)
bioassay_data_new_wide <- read_csv("~/Documents/GitHub/SkinBioassayStudy/Figures/Final/Figure3/Data/bioassay_data_new_wide.csv")
View(bioassay_data_new_wide)
View(bioassay_data_new_wide)
# Compare differences between the two datasets by Strain_ID
comparison2 <- list(
unique_to_df1 = anti_join(bioassay_data_new_reduced, bioassay_data_new_wide, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(bioassay_data_new_wide, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(bioassay_data_new_reduced, bioassay_data_new_wide, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(bioassay_data_new_reduced)
View(comparison)
# Compare differences between the two datasets by Strain_ID
comparison2 <- list(
unique_to_df1 = anti_join(bioassay_data_new_reduced, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(strain_list_reduced_for_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(bioassay_data_new_reduced, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(comparison2)
comparison2[["unique_to_df2"]]
View(raw_bioassay)
View(comparison1)
comparison1[["unique_to_df1"]]
# Look at bioassay data to filter out 182 strains with bioassay out of 615
# Remaining 433 strains
filtered_data <- raw_bioassay[raw_bioassay$Strain_ID %in% comparison1[["unique_to_df1"]], ]
View(filtered_data)
View(comparison)
View(comparison)
comparison[["unique_to_df1"]]
View(filtered_data)
View(comparison1)
View(comparison)
# 398 strains for bioasssay heatmpa
filtered_data1 <- raw_bioassay[raw_bioassay$Strain_ID %in% comparison[["in_both"]], ]
# 398 strains for bioasssay heatmpa
filtered_data1 <- raw_bioassay[raw_bioassay$Strain_ID %in% comparison[["in_both"]], ]
View(filtered_data1)
# Look at bioassay data to filter out 217 strains with bioassay out of 615
filtered_data <- raw_bioassay[raw_bioassay$Strain_ID %in% comparison[["unique_to_df1"]], ]
View(filtered_data)
duplicated_df1 <- filtered_data$Strain_ID[duplicated(filtered_data$Strain_ID)]
unique_duplicated_df1 <- unique(duplicated_df1)
View(filtered_data)
# List of strains with genomes
genome_sequenced_skin_bioassay_isolate_list <- read_csv("~/Documents/GitHub/Kalan_Lab/scripts/ssandstrom/skin_bioassay_paper_files/genome_sequenced_skin_bioassay_isolate_list.csv")
View(genome_sequenced_skin_bioassay_isolate_list)
View(genome_sequenced_skin_bioassay_isolate_list)
View(filtered_data)
# Compare differences between the two datasets by Strain_ID
comparison3 <- list(
unique_to_df1 = anti_join(bioassay_data_new_reduced, genome_sequenced_skin_bioassay_isolate_list, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(genome_sequenced_skin_bioassay_isolate_list, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(bioassay_data_new_reduced, genome_sequenced_skin_bioassay_isolate_list, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
# Compare differences between the two datasets by Strain_ID
comparison3 <- list(
unique_to_df1 = anti_join(bioassay_data_new_reduced, genome_sequenced_skin_bioassay_isolate_list, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
unique_to_df2 = anti_join(genome_sequenced_skin_bioassay_isolate_list, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(bioassay_data_new_reduced, genome_sequenced_skin_bioassay_isolate_list, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(comparison3)
unique(bioassay_data_new_reduced$Strain_ID)
View(comparison)
comparison[["unique_to_df1"]]
# 65 strains removed from genome dereplication
filtered_data2 <- raw_bioassay[raw_bioassay$Strain_ID %in% comparison3[["unique_to_df2"]],]
View(filtered_data2)
filtered_data3 <- raw_bioassay %>%
filter(
Strain_ID %in% comparison[["unique_to_df1"]] &
!Strain_ID %in% comparison3[["unique_to_df2"]]
)
unique(filtered_data3$Strain_ID)
filtered_data3 <- raw_bioassay %>%
filter(
Strain_ID %in% comparison[["unique_to_df1"]] &
Strain_ID %in% comparison3[["unique_to_df2"]]
)
filtered_data3 <- raw_bioassay %>%
filter(
!Strain_ID %in% comparison[["unique_to_df1"]] &
!Strain_ID %in% comparison3[["unique_to_df2"]]
)
filtered_data3 <- raw_bioassay %>%
filter(
Strain_ID %in% comparison[["unique_to_df1"]] &
!Strain_ID %in% comparison3[["unique_to_df2"]]
)
# Compare differences between the two datasets by Strain_ID
comparison <- list(
raw = anti_join(raw_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
bioassay_reduced = anti_join(bioassay_data_new_reduced, raw_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(raw_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(comparison)
# Compare differences between the two datasets by Strain_ID
comparison1 <- list(
raw = anti_join(raw_bioassay, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
strain_list_reduced = anti_join(strain_list_reduced_for_bioassay, raw_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(raw_bioassay, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
# Compare differences between the two datasets by Strain_ID
comparison2 <- list(
bioassay_reduced = anti_join(bioassay_data_new_reduced, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
strain_list_reduced = anti_join(strain_list_reduced_for_bioassay, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(bioassay_data_new_reduced, strain_list_reduced_for_bioassay, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
# Compare differences between the two datasets by Strain_ID
comparison3 <- list(
bioassay_reduced = anti_join(bioassay_data_new_reduced, genome_sequenced_skin_bioassay_isolate_list, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
genome = anti_join(genome_sequenced_skin_bioassay_isolate_list, bioassay_data_new_reduced, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique(),
in_both = inner_join(bioassay_data_new_reduced, genome_sequenced_skin_bioassay_isolate_list, by = "Strain_ID") %>%
pull(Strain_ID) %>%
unique()
)
View(comparison3)
